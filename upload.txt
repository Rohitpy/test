import os
import requests
from apscheduler.schedulers.background import BackgroundScheduler
import pandas as pd

scheduler = BackgroundScheduler()
batch_index = 0  # Track which batch to process

UPLOAD_URL = "http://localhost:8000/upload"  # Update if needed
FILES_DIR = os.path.join(os.path.dirname(__file__), "..", "..", "files_all")

def read_excel(file_path: str):
    df = pd.read_excel(file_path)
    return df[['filename', 'category', 'uploader']].to_dict(orient='records')

def upload_files(excel_file_path: str):
    global batch_index
    file_info_list = read_excel(excel_file_path)
    start = batch_index * 10
    end = start + 10
    batch = file_info_list[start:end]
    if not batch:
        batch_index = 0  # Reset if done
        return
    for file_info in batch:
        filename = file_info['filename']
        category = file_info['category']
        file_path = os.path.join(FILES_DIR, filename)
        if not os.path.isfile(file_path):
            print(f"File not found: {file_path}")
            continue
        with open(file_path, 'rb') as file:
            files = {'file': (filename, file, 'application/pdf')}
            data = {'filename': filename, 'category': category}
            response = requests.post(UPLOAD_URL, files=files, data=data)
            print(f"Uploaded {filename}: {response.status_code}")
    batch_index += 1

def schedule_file_uploads(excel_file_path: str):
    scheduler.add_job(upload_files, 'interval', hours=2, args=[excel_file_path])

scheduler.start()
